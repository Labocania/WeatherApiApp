// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherApiApp.Data;

namespace WeatherApiApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210726225054_CriadoPrevisaoDiariaOpenW")]
    partial class CriadoPrevisaoDiariaOpenW
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeatherApiApp.Models.Alerta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlertaFonte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Evento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrevisaoOpenWId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PrevisaoOpenWId")
                        .IsUnique();

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("WeatherApiApp.Models.Condicao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detalhes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrevisaoOpenWID")
                        .HasColumnType("int");

                    b.Property<string>("Principal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PrevisaoOpenWID");

                    b.ToTable("Condicoes");
                });

            modelBuilder.Entity("WeatherApiApp.Models.Municipio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Altitude")
                        .HasColumnType("real");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("UltimaModificacao")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ID");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("WeatherApiApp.Models.PrevisaoDiariaOpenW", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoberturaNuvem")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAmanhecer")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEntardecer")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPrevisao")
                        .HasColumnType("datetime2");

                    b.Property<float>("FaseLunar")
                        .HasColumnType("real");

                    b.Property<int>("Humidade")
                        .HasColumnType("int");

                    b.Property<float>("IndiceUV")
                        .HasColumnType("real");

                    b.Property<int?>("MunicipioID")
                        .HasColumnType("int");

                    b.Property<float>("Neve")
                        .HasColumnType("real");

                    b.Property<float>("PontoOrvalho")
                        .HasColumnType("real");

                    b.Property<float>("Precipitacao")
                        .HasColumnType("real");

                    b.Property<float>("Pressao")
                        .HasColumnType("real");

                    b.Property<int>("ProbPrecipitacao")
                        .HasColumnType("int");

                    b.Property<float>("SensDiaria")
                        .HasColumnType("real");

                    b.Property<float>("SensEntardecer")
                        .HasColumnType("real");

                    b.Property<float>("SensManha")
                        .HasColumnType("real");

                    b.Property<float>("SensNoite")
                        .HasColumnType("real");

                    b.Property<float>("TempDiaria")
                        .HasColumnType("real");

                    b.Property<float>("TempEntardecer")
                        .HasColumnType("real");

                    b.Property<float>("TempManha")
                        .HasColumnType("real");

                    b.Property<float>("TempMax")
                        .HasColumnType("real");

                    b.Property<float>("TempMin")
                        .HasColumnType("real");

                    b.Property<float>("TempNoite")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("MunicipioID");

                    b.ToTable("PrevisoesDiariasOpenW");
                });

            modelBuilder.Entity("WeatherApiApp.Models.PrevisaoOpenUV", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<float>("IndiceUV")
                        .HasColumnType("real");

                    b.Property<int?>("MunicipioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MunicipioID");

                    b.ToTable("PrevisoesOpenUV");
                });

            modelBuilder.Entity("WeatherApiApp.Models.Alerta", b =>
                {
                    b.HasOne("WeatherApiApp.Models.PrevisaoDiariaOpenW", "PrevisaoOpenW")
                        .WithOne("Alerta")
                        .HasForeignKey("WeatherApiApp.Models.Alerta", "PrevisaoOpenWId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrevisaoOpenW");
                });

            modelBuilder.Entity("WeatherApiApp.Models.Condicao", b =>
                {
                    b.HasOne("WeatherApiApp.Models.PrevisaoDiariaOpenW", "PrevisaoOpenW")
                        .WithMany("Condicoes")
                        .HasForeignKey("PrevisaoOpenWID");

                    b.Navigation("PrevisaoOpenW");
                });

            modelBuilder.Entity("WeatherApiApp.Models.PrevisaoDiariaOpenW", b =>
                {
                    b.HasOne("WeatherApiApp.Models.Municipio", "Municipio")
                        .WithMany("PrevisoesDiariasOpenW")
                        .HasForeignKey("MunicipioID");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("WeatherApiApp.Models.PrevisaoOpenUV", b =>
                {
                    b.HasOne("WeatherApiApp.Models.Municipio", "Municipio")
                        .WithMany("PrevisoesOpenUV")
                        .HasForeignKey("MunicipioID");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("WeatherApiApp.Models.Municipio", b =>
                {
                    b.Navigation("PrevisoesDiariasOpenW");

                    b.Navigation("PrevisoesOpenUV");
                });

            modelBuilder.Entity("WeatherApiApp.Models.PrevisaoDiariaOpenW", b =>
                {
                    b.Navigation("Alerta");

                    b.Navigation("Condicoes");
                });
#pragma warning restore 612, 618
        }
    }
}
